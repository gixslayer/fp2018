// Ciske Harsema - s1010048
// Steven Wallis de Vries - s1011387

-- 1
twice = \f -> \x -> f(f x)

twice (+1) 0
(\f -> \x -> f(f x)) (+1) 0
(\x -> (+1) ((+1) x)) 0
(+1) ((+1) 0)
(+1) (1)
2

twice twice (*2) 1
(\f -> \x -> f(f x)) twice (*2) 1
(\f -> \x -> f(f x)) (\g -> \y -> g(g y)) (*2) 1
(\f -> \x -> f(f x)) (\y -> (*2) ((*2) y)) 1
(\x -> (\y -> (*2) ((*2) y)) ((\y -> (*2) ((*2) y)) x)) 1
(\y -> (*2) ((*2) y)) ((\y -> (*2) ((*2) y)) 1)
(\y -> (*2) ((*2) y)) ((*2) ((*2) 1))
(\y -> (*2) ((*2) y)) 4
(*2) ((*2) 4)
(*2) 8
16

-- 2
twice :: (t -> t) -> t -> t
it takes a function from type t to t, and a parameter t, and returns type t
